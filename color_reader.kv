#:import am analyser_math
<CalibrationScreen>:
    id: readerScreen
    canvas:
        Rectangle:
            texture: self.tex
            size: (root.width * 0.8, root.height * 0.85)
            pos: (root.width * 0.2, root.height * 0.15)
    ColorReader:
        id: colorReader
        spotCount: app.spotCount
        currentSpotType: 'std'
        x: root.width * 0.2
        y: root.height * 0.15
        width: root.width * 0.8
        height: root.height * 0.85
    BoxLayout:
        x: 0
        y: root.height * 0.15
        width: root.width * 0.2
        height: root.height * 0.85
        orientation: 'vertical'
        Button:
            text: 'Reposition Spots'
            on_release: colorReader.scanAllSpots(app.measuredChannel)
        Button:
            text: 'Use this \ncalibration'
            text_size: self.size
            font_size: '15sp'
            halign: 'center'
            valign: 'middle'
            on_release:
                app.writeSpotsToConfig()
                app.calib = am.calculateACalibCurve(app.calibrationScreen.ids['colorReader'].spots, app.calcLog, app.measuredChannel, app.qConfCSV)
                app.writeCalibFile(app.calibFile, app.calib)
                am.writeRawData(app.calib, app.rawFile, app.calibrationScreen.ids['colorReader'].spots, app.measuredChannel, firstWrite=True)
                app.targetReaderScreen = 'sample'
                app.goto_image_menu()
        TextInput:
            text: str(colorReader.currentSpotSize)
            font_size: self.height * 0.8
            on_text: colorReader.updateSpotSize(self.text)
        Label:
            text: 'Spot size'
            size_hint_y: 0.3
        TextInput:
            id: sampleValText
            text: str(colorReader.currentSpotConc)
            font_size: self.height * 0.8
            on_text: colorReader.currentSpotConc = float(self.text)
        Label:
            text: 'Std Conc'
            size_hint_y: 0.3
        RelativeLayout:
            cols: 3
            row: 3
            Button:
                size_hint_x: None
                size_hint_y: None
                x: self.parent.width * 0.33333
                y: self.parent.height * 0.66667
                width: self.parent.width * 0.33333
                height: self.parent.height * 0.33333
                text: 'Up'
                text_size: self.size
                font_size: self.width * 0.3
                halign: 'center'
                valign: 'middle'
                on_press: colorReader.startMoveBox(0, 1)
                on_release: colorReader.stopMoveBox()
            Button:
                size_hint_x: None
                size_hint_y: None
                x: self.parent.width * 0.33333
                y: 0
                width: self.parent.width * 0.33333
                height: self.parent.height * 0.33333
                text: 'Down'
                text_size: self.size
                font_size: self.width * 0.3
                halign: 'center'
                valign: 'middle'
                on_press: colorReader.startMoveBox(0, -1)
                on_release: colorReader.stopMoveBox()
            Button:
                size_hint_x: None
                size_hint_y: None
                x: 0
                y: self.parent.height * 0.33333 
                width: self.parent.width * 0.33333
                height: self.parent.height * 0.33333
                text: 'Left'
                text_size: self.size
                font_size: self.width * 0.3
                halign: 'center'
                valign: 'middle'
                on_press: colorReader.startMoveBox(-1, 0)
                on_release: colorReader.stopMoveBox()
            Button:
                size_hint_x: None
                size_hint_y: None
                x: self.parent.width * 0.66667
                y: self.parent.height * 0.33333
                width: self.parent.width * 0.33333
                height: self.parent.height * 0.33333
                text: 'Right'
                text_size: self.size
                font_size: self.width * 0.3
                halign: 'center'
                valign: 'middle'
                on_press: colorReader.startMoveBox(1, 0)
                on_release: colorReader.stopMoveBox()
    BoxLayout:
        width: root.width
        y: root.height * 0.1
        height: root.height * 0.05
        ColorReaderToggleButton:
            text: colorReader.spotButtonText[0]
            state: 'down'
            on_press: colorReader.currentSpot = colorReader.spots[0]
        ColorReaderToggleButton:
            text: colorReader.spotButtonText[1]
            on_press: colorReader.currentSpot = colorReader.spots[1]
        ColorReaderToggleButton:
            text: colorReader.spotButtonText[2]
            on_press: colorReader.currentSpot = colorReader.spots[2]
        ColorReaderToggleButton:
            text: colorReader.spotButtonText[3]
            on_press: colorReader.currentSpot = colorReader.spots[3]
        ColorReaderToggleButton:
            text: colorReader.spotButtonText[4]
            on_press: colorReader.currentSpot = colorReader.spots[4]
    BoxLayout:
        width: root.width
        y: root.height * 0.05
        height: root.height * 0.05
        ColorReaderToggleButton:
            text: colorReader.spotButtonText[5]
            on_press: colorReader.currentSpot = colorReader.spots[5]
        ColorReaderToggleButton:
            text: colorReader.spotButtonText[6]
            on_press: colorReader.currentSpot = colorReader.spots[6]
        ColorReaderToggleButton:
            text: colorReader.spotButtonText[7]
            on_press: colorReader.currentSpot = colorReader.spots[7]
        ColorReaderToggleButton:
            text: colorReader.spotButtonText[8]
            on_press: colorReader.currentSpot = colorReader.spots[8]
        ColorReaderToggleButton:
            text: colorReader.spotButtonText[9]
            on_press: colorReader.currentSpot = colorReader.spots[9]
    BoxLayout:
        width: root.width
        y: 0
        height: root.height * 0.05
        ColorReaderToggleButton:
            text: colorReader.spotButtonText[10]
            on_press: colorReader.currentSpot = colorReader.spots[10]
        ColorReaderToggleButton:
            text: colorReader.spotButtonText[11]
            on_press: colorReader.currentSpot = colorReader.spots[11]
        ColorReaderToggleButton:
            text: colorReader.spotButtonText[12]
            on_press: colorReader.currentSpot = colorReader.spots[12]
        ColorReaderToggleButton:
            text: colorReader.spotButtonText[13]
            on_press: colorReader.currentSpot = colorReader.spots[13]
        ColorReaderToggleButton:
            text: colorReader.spotButtonText[14]
            on_press: colorReader.currentSpot = colorReader.spots[14]


<SampleScreen>:
    id: readerScreen
    canvas:
        Rectangle:
            texture: self.tex
            size: (root.width * 0.8, root.height * 0.85)
            pos: (root.width * 0.2, root.height * 0.15)
    ColorReader:
        id: colorReader
        spotCount: app.spotCount
        currentSpotType: 'Sample'
        x: root.width * 0.2
        y: root.height * 0.15
        width: root.width * 0.8
        height: root.height * 0.85
    BoxLayout:
        x: 0
        y: root.height * 0.15
        width: root.width * 0.2
        height: root.height * 0.85
        orientation: 'vertical'
        Button:
            text: 'Reposition Spots'
            on_release: colorReader.scanAllSpots(app.measuredChannel)
        TextInput:
            text: str(root.sampleGrp)
            font_size: self.height * 0.8
            on_text: 
                root.sampleGrp = int(self.text)
                root.updateSpotGrps()
        Label:
            text: 'Sample Number'
            size_hint_y: 0.3
        TextInput:
            text: str(colorReader.currentSpotSize)
            font_size: self.height * 0.8
            on_text: colorReader.updateSpotSize(self.text)
        Label:
            text: 'Spot size'
            size_hint_y: 0.3
        Button:
            text: 'Get new image'
            font_size: '15sp'
            halign: 'center'
            valign: 'middle'
            on_release:
                app.writeSpotsToConfig()
                am.writeSamplesFile(app.calib, app.samplesFile, app.sampleScreen.ids['colorReader'].spots, app.calcLog, app.firstSample)
                am.writeRawData(app.calib, app.rawFile, app.sampleScreen.ids['colorReader'].spots, app.measuredChannel)
                app.firstSample = False
                root.sampleGrp += 1
                app.goto_image_menu()
        Button:
            text: 'Send email'
            font_size: '15sp'
            halign: 'center'
            valign: 'middle'
            on_release:
                app.writeSpotsToConfig()
                am.writeRawData(app.calib, app.rawFile, app.sampleScreen.ids['colorReader'].spots, app.measuredChannel)
                am.writeSamplesFile(app.calib, app.samplesFile, app.sampleScreen.ids['colorReader'].spots, app.calcLog, app.firstSample)
                app.firstSample = False
                root.sampleGrp += 1
                app.sendEmail()
                app.goto_main_menu()
        RelativeLayout:
            cols: 3
            row: 3
            Button:
                size_hint_x: None
                size_hint_y: None
                x: self.parent.width * 0.33333
                y: self.parent.height * 0.66667
                width: self.parent.width * 0.33333
                height: self.parent.height * 0.33333
                text: 'Up'
                text_size: self.size
                font_size: self.width * 0.3
                halign: 'center'
                valign: 'middle'
                on_press: colorReader.startMoveBox(0, 1)
                on_release: colorReader.stopMoveBox()
            Button:
                size_hint_x: None
                size_hint_y: None
                x: self.parent.width * 0.33333
                y: 0
                width: self.parent.width * 0.33333
                height: self.parent.height * 0.33333
                text: 'Down'
                text_size: self.size
                font_size: self.width * 0.3
                halign: 'center'
                valign: 'middle'
                on_press: colorReader.startMoveBox(0, -1)
                on_release: colorReader.stopMoveBox()
            Button:
                size_hint_x: None
                size_hint_y: None
                x: 0
                y: self.parent.height * 0.33333 
                width: self.parent.width * 0.33333
                height: self.parent.height * 0.33333
                text: 'Left'
                text_size: self.size
                font_size: self.width * 0.3
                halign: 'center'
                valign: 'middle'
                on_press: colorReader.startMoveBox(-1, 0)
                on_release: colorReader.stopMoveBox()
            Button:
                size_hint_x: None
                size_hint_y: None
                x: self.parent.width * 0.66667
                y: self.parent.height * 0.33333
                width: self.parent.width * 0.33333
                height: self.parent.height * 0.33333
                text: 'Right'
                text_size: self.size
                font_size: self.width * 0.3
                halign: 'center'
                valign: 'middle'
                on_press: colorReader.startMoveBox(1, 0)
                on_release: colorReader.stopMoveBox()
    BoxLayout:
        width: root.width
        y: root.height * 0.1
        height: root.height * 0.05
        ColorReaderToggleButton:
            text: colorReader.spotButtonText[0]
            state: 'down'
            on_press: colorReader.currentSpot = colorReader.spots[0]
        ColorReaderToggleButton:
            text: colorReader.spotButtonText[1]
            on_press: colorReader.currentSpot = colorReader.spots[1]
        ColorReaderToggleButton:
            text: colorReader.spotButtonText[2]
            on_press: colorReader.currentSpot = colorReader.spots[2]
        ColorReaderToggleButton:
            text: colorReader.spotButtonText[3]
            on_press: colorReader.currentSpot = colorReader.spots[3]
        ColorReaderToggleButton:
            text: colorReader.spotButtonText[4]
            on_press: colorReader.currentSpot = colorReader.spots[4]
    BoxLayout:
        width: root.width
        y: root.height * 0.05
        height: root.height * 0.05
        ColorReaderToggleButton:
            text: colorReader.spotButtonText[5]
            on_press: colorReader.currentSpot = colorReader.spots[5]
        ColorReaderToggleButton:
            text: colorReader.spotButtonText[6]
            on_press: colorReader.currentSpot = colorReader.spots[6]
        ColorReaderToggleButton:
            text: colorReader.spotButtonText[7]
            on_press: colorReader.currentSpot = colorReader.spots[7]
        ColorReaderToggleButton:
            text: colorReader.spotButtonText[8]
            on_press: colorReader.currentSpot = colorReader.spots[8]
        ColorReaderToggleButton:
            text: colorReader.spotButtonText[9]
            on_press: colorReader.currentSpot = colorReader.spots[9]
    BoxLayout:
        width: root.width
        y: 0
        height: root.height * 0.05
        ColorReaderToggleButton:
            text: colorReader.spotButtonText[10]
            on_press: colorReader.currentSpot = colorReader.spots[10]
        ColorReaderToggleButton:
            text: colorReader.spotButtonText[11]
            on_press: colorReader.currentSpot = colorReader.spots[11]
        ColorReaderToggleButton:
            text: colorReader.spotButtonText[12]
            on_press: colorReader.currentSpot = colorReader.spots[12]
        ColorReaderToggleButton:
            text: colorReader.spotButtonText[13]
            on_press: colorReader.currentSpot = colorReader.spots[13]
        ColorReaderToggleButton:
            text: colorReader.spotButtonText[14]
            on_press: colorReader.currentSpot = colorReader.spots[14]


<ColorReaderToggleButton@ToggleButton>:
    group: 'select'
    allow_no_currentSpot: False
    font_size: self.height * 0.35
    halign: 'center'
    valign: 'middle'
    markup: True


